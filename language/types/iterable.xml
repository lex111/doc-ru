<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e9366ee458b2900c53a503b1ad97664e1d9a8859 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->

<sect1 xml:id="language.types.iterable">
 <title>Итерируемые</title>
 
 <para>
  <type>Iterable</type> - псевдотип, введённый в PHP 7.1. Он принимает
  любой массив (&array;) или объект, реализующий интерфейс <classname>Traversable</classname>.
  Оба этих типа итерируются с помощью &foreach; и могут быть использованы
  с <command>yield from</command> в <link
  linkend="language.generators">генераторах</link>.
 </para>
 
 <sect2 xml:id="language.types.iterable.using">
  <title>Использование Iterable</title>
  
  <para>
   Тип iterable может использоваться как тип параметра для указания, что
   функция принимает набор значений, но ей не важна форма этого набора,
   пока он будет использоваться с &foreach;. Если значение не является
   массивом или объектом, реализующим <classname>Traversable</classname>, 
   будет выброшено исключение <classname>TypeError</classname>.
  </para>
  
  <para>
   <example>
    <title>
     Пример использования iterable в качестве параметра
    </title>
    <programlisting role="php">
<![CDATA[
<?php

function foo(iterable $iterable) {
    foreach ($iterable as $value) {
        // ...
    } 
}

?>
]]>
    </programlisting>
   </example>
  </para>
  
  <para>
   Параметры, объявленные как iterable, могут использовать &null; или массив
   в качестве значения по умолчанию.
  </para>
  
  <para>
   <example>
    <title>
     Пример установки значения по умолчанию для iterable
    </title>
    <programlisting role="php">
<![CDATA[
<?php

function foo(iterable $iterable = []) {
    // ...
}

?>
]]>
    </programlisting>
   </example>
  </para>
  
  <para>
   Iterable также может использоваться как возвращаемый тип для указания, что функция
   вернёт итерируемое значение. Если возвращаемое значение не является
   массивом или объектом, реализующим <classname>Traversable</classname>, 
   будет выброшено исключение <classname>TypeError</classname>.
  </para>
  
  <para>
   <example>
    <title>
     Пример использования iterable в качестве возвращаемого типа
    </title>
    <programlisting role="php">
<![CDATA[
<?php

function bar(): iterable {
    return [1, 2, 3];
}

?>
]]>
    </programlisting>
   </example>
  </para>
  
  <para>
   Функции, объявляющие iterable как возвращаемый тип, также могут быть
   <link linkend="language.generators">генераторами</link>.
  </para>
  
  <para>
   <example>
    <title>
     Пример использования iterable в качестве возвращаемого значения генератора
    </title>
    <programlisting role="php">
<![CDATA[
<?php

function gen(): iterable {
    yield 1;
    yield 2;
    yield 3;
}

?>
]]>
    </programlisting>
   </example>
  </para>
 </sect2>
 
 <sect2 xml:id="language.types.iterable.variance">
  <title>Приведение типа iterable</title>
  
  <para>
   Наследующие/реализующие классы могут расширять методы, использующие
   массив (&array;) или объекты, реализующие <classname>Traversable</classname>
   в качестве типов параметров до <type>iterable</type> или
   ограничить возвращаемые типы с <type>iterable</type> до массива (&array;)
   или <classname>Traversable</classname>.
  </para>
  
  <para>
   <example>
    <title>
     Пример приведения типа iterable
    </title>
    <programlisting role="php">
<![CDATA[
<?php

interface Example {
    public function method(array $array): iterable;
}

class ExampleImplementation implements Example {
    public function method(iterable $iterable): array {
        // Тип параметра расширен, а возвращаемое значение ограничено.
    }
}

?>
]]>
    </programlisting>
   </example>
  </para>
 </sect2>
 
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
