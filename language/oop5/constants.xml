<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b08540046ece3586e543293d3c01630d9127b285 Maintainer: shein Status: ready -->
<!-- Reviewed: yes -->
<!-- $Revision$ -->
<sect1 xml:id="language.oop5.constants" xmlns="http://docbook.org/ns/docbook">
 <title>Константы классов</title>
 <para>
  Константы также могут быть объявлены в пределах одного класса.
  Отличие переменных от констант состоит в том, что при объявлении последних
  или при обращении к ним не используется символ <varname>$</varname>.
  Область видимости констант по умолчанию <literal>public</literal>.
 </para>
 <para>
  Значение должно быть неизменяемым выражением, а не (к примеру) переменной,
  свойством или вызовом функции.
 </para>
 <para>
  Интерфейсы также могут содержать константы (<literal>constants</literal>). За примерами
  обращайтесь к разделу об <link linkend="language.oop5.interfaces">интерфейсах</link>.
 </para>
 <para>
  Начиная с PHP 5.3.0, стало возможным обратиться к классу с помощью
  переменной. Значение переменной не может быть ключевым словом
  (например, <literal>self</literal>, <literal>parent</literal> и
  <literal>static</literal>).
 </para>
 <para>
  Обратите внимание, что константы класса задаются один раз для всего класса,
  а не отдельно для каждого созданного объекта этого класса.
 </para>
 <example>
  <title>Объявление и использование константы</title>
  <programlisting role="php">
<![CDATA[
<?php
class MyClass
{
    const CONSTANT = 'значение константы';

    function showConstant() {
        echo  self::CONSTANT . "\n";
    }
}

echo MyClass::CONSTANT . "\n";

$classname = "MyClass";
echo $classname::CONSTANT . "\n"; // начиная с PHP 5.3.0

$class = new MyClass();
$class->showConstant();

echo $class::CONSTANT."\n"; // начиная с PHP 5.3.0
?>
]]>
   </programlisting>
 </example>
 <example>
  <title>Пример со статичными данными</title>
  <programlisting role="php">
<![CDATA[
<?php
class foo {
    // Начиная с PHP 5.3.0
    const BAR = <<<'EOT'
bar
EOT;
    // Начиная с PHP 5.3.0
    const BAZ = <<<EOT
baz
EOT;
}
?>
]]>
   </programlisting>
 </example>
 <note>
  <para>
   Поддержка синтаксиса Heredoc и Nowdoc при инициализации констант была добавлена в версии PHP 5.3.0.
  </para>
 </note>
 <para>
  Начиная с PHP 5.5.0 доступна специальная константа <constant>::class</constant>, 
  которой на этапе компиляции присваивается полное имя класса. Полезна при использовании с классами,
  использующими пространства имён.
 </para>
 <example>
  <title>Пример использования ::class с пространством имён</title>
  <programlisting role="php">
<![CDATA[
<?php
namespace foo {
    class bar {
    }

    echo bar::class; // foo\bar
}
?>
]]>
   </programlisting>
 </example>
 <example>
  <title>Пример констант, заданных выражением</title>
  <programlisting role="php">
<![CDATA[
<?php
const ONE = 1;

class foo {
    // Начиная с PHP 5.6.0
    const TWO = ONE * 2;
    const THREE = ONE + self::TWO;
    const SENTENCE = 'Значение константы THREE - ' . self::THREE;
}
?>
]]>
   </programlisting>
   <para>
    Для задания констант класса возможно использовать скалярные выражения с цифрами,
    строками и/или другими константами.
   </para>
 </example>
 <note>
  <para>
   Поддержка константных выражений была добавлена в PHP 5.6.0.
  </para>
 </note>
 
 <example>
  <title>Модификаторы видимости констант класса</title>
  <programlisting role="php">
<![CDATA[
<?php
class Foo {
    // Начиная с PHP 7.1.0
    public const BAR = 'bar';
    private const BAZ = 'baz';
}
echo Foo::BAR, PHP_EOL;
echo Foo::BAZ, PHP_EOL;
?>
]]>
   </programlisting>
   &example.outputs.71;
   <screen>
<![CDATA[
bar

Fatal error: Uncaught Error: Cannot access private const Foo::BAZ in …
]]>
   </screen>
 </example>
 <note>
  <para>
   Начиная с PHP 7.1.0 для констант класса можно использовать модификаторы области видимости.
  </para>
 </note>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
