<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c1434c95fc666c20cdbd1e1d9a4183e0d11fb88c Maintainer: mch Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->
<!-- $Revision$ -->
<refentry xml:id="mysqli-result.fetch-assoc" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli_result::fetch_assoc</refname>
  <refname>mysqli_fetch_assoc</refname>
  <refpurpose>Извлекает результирующий ряд в виде ассоциативного массива</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <modifier>public</modifier> <type>array</type><methodname>mysqli_result::fetch_assoc</methodname>
   <void />
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>array</type><methodname>mysqli_fetch_assoc</methodname>
   <methodparam><type>mysqli_result</type><parameter>result</parameter></methodparam>
  </methodsynopsis>
  <para>
   Возвращает ассоциативный массив, соответствующий результирующей выборке или &null;,
   если других рядов не существует.
  </para>
  &database.field-case;
  &database.fetch-null;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.result.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает ассоциативный массив строк, соответствующий результирующей выборке,
   где каждый ключ в массиве соответствует имени одного из столбцов выборки или
   &null;, если других рядов не существует.
  </para>
  <para>
   Если два или более столбца в выборке имеют одинаковое название полей, то
   приоритет отдаётся последнему столбцу. Для доступа к другому столбцу с таким
   же именем вам необходимо произвести нумерованную выборку с помощью функцию
   <function>mysqli_fetch_row</function> или добавить псевдонимы.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&style.oop;</title>
   <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

/* проверка соединения */
if ($mysqli->connect_errno) {
    printf("Соединение не удалось: %s\n", $mysqli->connect_error);
    exit();
}

$query = "SELECT Name, CountryCode FROM City ORDER by ID DESC LIMIT 50,5";

if ($result = $mysqli->query($query)) {

    /* извлечение ассоциативного массива */
    while ($row = $result->fetch_assoc()) {
        printf ("%s (%s)\n", $row["Name"], $row["CountryCode"]);
    }

    /* удаление выборки */
    $result->free();
}

/* закрытие соединения */
$mysqli->close();
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>&style.procedural;</title>
   <programlisting role="php">
<![CDATA[
<?php
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

/* проверка соединения */
if (mysqli_connect_errno()) {
    printf("Соединение не удалось: %s\n", mysqli_connect_error());
    exit();
}

$query = "SELECT Name, CountryCode FROM City ORDER by ID DESC LIMIT 50,5";

if ($result = mysqli_query($link, $query)) {

    /* извлечение ассоциативного массива */
    while ($row = mysqli_fetch_assoc($result)) {
        printf ("%s (%s)\n", $row["Name"], $row["CountryCode"]);
    }

    /* удаление выборки */
    mysqli_free_result($result);
}

/* закрытие соединения */
mysqli_close($link);
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
Pueblo (USA)
Arvada (USA)
Cape Coral (USA)
Green Bay (USA)
Santa Clara (USA)
]]>
   </screen>
  </example>
  <example xml:id="mysqli-result.example.iterator">
   <title>Пример использования <classname>mysqli_result</classname> с использованием класса <classname>iterator</classname></title>
   <programlisting role="php">
<![CDATA[
<?php
$c = mysqli_connect('127.0.0.1','user', 'pass');

// Использование итераторов (поддержка была добавлена начиная с PHP 5.4)
foreach ( $c->query('SELECT user,host FROM mysql.user') as $row ) {
    printf("'%s'@'%s'\n", $row['user'], $row['host']);
}

echo "\n==================\n";

// Без использования итераторов
$result = $c->query('SELECT user,host FROM mysql.user');
while ($row = $result->fetch_assoc()) {
    printf("'%s'@'%s'\n", $row['user'], $row['host']);
}

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
'root'@'192.168.1.1'
'root'@'127.0.0.1'
'dude'@'localhost'
'lebowski'@'localhost'

==================

'root'@'192.168.1.1'
'root'@'127.0.0.1'
'dude'@'localhost'
'lebowski'@'localhost'
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_fetch_array</function></member>
    <member><function>mysqli_fetch_row</function></member>
    <member><function>mysqli_fetch_object</function></member>
    <member><function>mysqli_query</function></member>
    <member><function>mysqli_data_seek</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
