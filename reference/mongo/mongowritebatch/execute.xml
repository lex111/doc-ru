<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: a5492acb760d98434201253c9b5522dab074130a Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongowritebatch.execute" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoWriteBatch::execute</refname>
  <refpurpose>Выполняет пакет операций записи</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>final</modifier> <modifier>public</modifier> <type>array</type><methodname>MongoWriteBatch::execute</methodname>
   <methodparam><type>array</type><parameter>write_options</parameter></methodparam>
  </methodsynopsis>
  <para>
   Выполняет пакет операций записи.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>write_options</parameter></term>
    <listitem>
     <para>
      Смотрите <link linkend="mongowritebatch.construct.write_options">MongoWriteBatch::__construct</link>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает массив, содержащий статистическую информацию для полного пакета. 
   Если пакет нужно было разделить на несколько пакетов, возвращаемое значение 
   будет агрегировать значения из отдельных пакетов и возвращать только итог.
  </para>
  <para>
   Если пакет был пустым, возвращается массив, содержащий только поле 'ok' (как &true;), 
   хотя ничего не будет отправлено (<acronym>NOOP</acronym>).
  </para>
  <para>
   <informaltable>
    <thead>
     <row>
      <entry>Ключ массива</entry>
      <entry>Значение</entry>
      <entry>Возвращается для типа пакета</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>nInserted</entry>
      <entry>Количество вставленных документов</entry>
      <entry>MongoWriteBatch::COMMAND_INSERT batch</entry>
     </row>
     <row>
      <entry>nMatched</entry>
      <entry>Количество документов, соответствующих критериям запроса</entry>
      <entry>MongoWriteBatch::COMMAND_UPDATE batch</entry>
     </row>
     <row>
      <entry>nModified</entry>
      <entry>Количество документов, которые действительно необходимо изменить</entry>
      <entry>MongoWriteBatch::COMMAND_UPDATE batch</entry>
     </row>
     <row>
      <entry>nUpserted</entry>
      <entry>Количество отправленных документов</entry>
      <entry>MongoWriteBatch::COMMAND_UPDATE batch</entry>
     </row>
     <row>
      <entry>nRemoved</entry>
      <entry>Количество удалённых документов</entry>
      <entry>MongoWriteBatch::COMMAND_DELETE batch</entry>
     </row>
     <row>
      <entry>ok</entry>
      <entry>Индикатор успешности выполнения команды</entry>
      <entry>All</entry>
     </row>
    </tbody>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Исключение <classname>MongoWriteConcernException</classname> выдаётся при сбое.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="mongowritebatch.execute.example.insert">
   <title>Пример использования <methodname>MongoWriteBatch::add</methodname></title>
   <para>
    Пакетная операция вставки
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$mc = new MongoClient("localhost");
$collection = $mc->selectCollection("test", "test");


$docs = array();
$docs[] = array("my" => "demo");
$docs[] = array("is" => "working");
$docs[] = array("pretty" => "well");

$batch = new MongoInsertBatch($collection);
foreach($docs as $document) {
    $batch->add($document);
}
$retval = $batch->execute(array("w" => 1));
var_dump($retval);
?>
]]>
   </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(2) {
  ["nInserted"]=>
  int(3)
  ["ok"]=>
  bool(true)
}
]]>
    </screen>
  </example>

  <example xml:id="mongowritebatch.execute.example.update">
   <title>Пример использования <methodname>MongoWriteBatch::add</methodname></title>
   <para>
    Пакетная операция обновления
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$mc = new MongoClient("localhost");
$collection = $mc->selectCollection("test", "test");


$item1 = array(
    "q" => array("my" => "demo"),
    "u" => array('$set' => array("try" => 1)),
    "multi"  => false, /* значение по умолчанию */
    "upsert" => false, /* значение по умолчанию */
);
$item2 = array(
    "q" => array("is" => "working"),
    "u" => array('$set' => array("try" => 2)),
    "multi" => true,
);
$item3 = array(
    "q" => array("created" => "new-document"),
    "u" => array('$set' => array("try" => 3)),
    "upsert" => true,
);

$batch = new MongoUpdateBatch($collection);
$batch->add($item1);
$batch->add($item2);
$batch->add($item3);
$retval = $batch->execute(array("w" => 1));
var_dump($retval);

?>
]]>
   </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(4) {
  ["nMatched"]=>
  int(18)
  ["nModified"]=>
  int(2)
  ["nUpserted"]=>
  int(0)
  ["ok"]=>
  bool(true)
}
]]>
    </screen>
  </example>

  <example xml:id="mongowritebatch.execute.example.delete">
   <title>Пример использования <methodname>MongoWriteBatch::add</methodname></title>
   <para>
    Пакетная операция удаления
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$mc = new MongoClient("localhost");
$collection = $mc->selectCollection("test", "test");


$item1 = array(
    "q" => array("my" => "demo"),
    "limit" => 1,
);
$item2 = array(
    "q" => array("try" => 3),
    "limit" => 1,
);


$batch = new MongoDeleteBatch($collection);
$batch->add($item1);
$batch->add($item2);
$retval = $batch->execute(array("w" => 1));
var_dump($retval);
?>
]]>
   </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(2) {
  ["nRemoved"]=>
  int(1)
  ["ok"]=>
  bool(true)
}
]]>
    </screen>
  </example>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
