<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 61fa6fb09233679bec09c7641a2a271d9508427c Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocursor.addoption" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCursor::addOption</refname>
  <refpurpose>Добавляет пару ключ/значение верхнего уровня в запрос</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCursor</type><methodname>MongoCursor::addOption</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   Это расширенная функция, и её нельзя использовать, если вы не знаете, что делаете.
  </para>
  <para>
   Запрос может быть дополнительно вложен в поле "query", 
   если заданы другие параметры, такие как сортировка или подсказка. 
   Например, добавление сортировки приведёт к тому, 
   что запрос становится подполем более крупного объекта запроса, например:
   <programlisting role="php">
<![CDATA[
<?php

$query = array("query" => $query, "orderby" => $sort);

?>
]]>
   </programlisting>
  </para>
  <para>
   Этот метод предназначен для добавления поля верхнего уровня в запрос. 
   Это делает запрос подобъектом (если это ещё не сделано) и добавляет 
   пару ключ/значение по вашему выбору на верхний уровень.
  </para>
  <warning>
   <para>
    Его нельзя использовать для добавления дополнительных критериев к запросу на лету. 
    Например, это <emphasis>не будет</emphasis> работать:
    <programlisting role="php">
<![CDATA[
<?php

// НЕ ПРАВИЛЬНО
$cursor = $users->find()->addOption("name", "joe")->addOption("age", 20);

?>
]]>
    </programlisting>
    Это <emphasis>не запрашивает</emphasis> пользователя с именем "joe" в возрасте 20 лет.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>key</parameter>
     </term>
     <listitem>
      <para>
       Имя поля для добавления.
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>value</parameter>
     </term>
     <listitem>
      <para>
       Значение для добавления.
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;  
  <para>
   Возвращает курсор.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Выдаёт исключение <classname>MongoCursorException</classname>, 
   если этот курсор начал итерацию.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример использования <function>MongoCursor::addOption</function> для добавления комментария</title>
   <para>
    MongoDB поддерживает специальные опции для отправки на сервер. 
    Оболочка использует опцию <literal>_addSpecial</literal> для отправки 
    <literal>$comment</literal> на сервер. Этот комментарий будет отображаться 
    в журнале профилирования (например, для медленных запросов). 
    В драйвере PHP вы используете метод <function>MongoCursor::addOption</function>.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$m = new MongoClient;
$c = $m->demo->demo;
$cursor = $c->find();
$cursor->addOption('$comment', "Этот комментарий будет отображаться в журнале профилирования");

foreach ($cursor as $document) { /* пусто */ }
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
{
    "op" : "query",
    "ns" : "demo.demo",
    "query" : {
        "$query" : {
             
        },
        "$comment" : "Этот комментарий будет отображаться в журнале профилирования"
    },
    "cursorid" : 168463566447,
    "ntoreturn" : 0,
    "ntoskip" : 0,
    "nscanned" : 101,
    "nscannedObjects" : 101,
    "keyUpdates" : 0,
    "numYield" : 0,
…
]]>
   </screen>
  </example>

  <example>
   <title>Пример использования <function>MongoCursor::addOption</function></title>
   <para>
    Использование <function>MongoCursor::skip</function> для пропуска миллионов 
    результатов может стать медленным. Одним из способов решения этой проблемы 
    является использование параметров <literal>$min</literal> или <literal>$max</literal> для запроса. 
    Это может быть удобно, но для них требуется указатель именно на искомые поля. 
    Это пример того, как использовать <literal>$min</literal> 
    в качестве альтернативы <function>MongoCursor::skip</function>.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

// убедитесь, что у нас есть индекс
$c->ensureIndex(array("ts" => 1));

// вам, возможно, придётся изменить это, чтобы запускаться
// в разумные сроки на медленных машинах (на хорошей машине это может занять около 30 секунд)
for ($i = 0; $i < 30000000; $i++) {
    $c->insert(array("ts" => new MongoDate(), "i" => $i));
}

$now = strtotime("now");

// найти документы, вставленные за последние 2 секунды
$cursor = $c->find()->addOption('$min', array("ts" => $now-2));

?>
]]>
   </programlisting>
  </example>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
