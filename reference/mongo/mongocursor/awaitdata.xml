<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: b8758b0605e80c4e3610137b7502a6abeea5c69b Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocursor.awaitdata" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCursor::awaitData</refname>
  <refpurpose>Устанавливает, будет ли этот курсор некоторое время ждать, пока настраиваемый курсор вернёт больше данных</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCursor</type><methodname>MongoCursor::awaitData</methodname>
   <methodparam choice="opt"><type>bool</type><parameter>wait</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Метод должен использоваться с настраиваемыми курсорами. Если мы находимся в конце, 
   блокирум на некоторое время и не возвращаем никаких данных. 
   После периода ожидания мы возвращаем, как обычно.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>wait</parameter>
     </term>
     <listitem>
      <para>
       Если курсор должен ждать, пока больше данных не станет доступно.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает курсор.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Выдаёт исключение <classname>MongoCursorException</classname>, если этот курсор начал итерацию.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример использования <function>MongoCursor::awaitData</function></title>
   <para>
    В этом примере мы подключаем "oplog" и вместо сна во время каждой 
    итерации устанавливаем опцию <function>MongoCursor::awaitData</function>. 
    <function>MongoCursor::hasNext</function> теперь будет блокироваться, 
    пока не станет доступно больше данных.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$m = new MongoClient( 'mongodb://localhost:13000', array( 'replSet' => 'seta' ) );
$c = $m->local->selectCollection( 'oplog.rs' );
$cursor = $c->find( array( 'ns' => 'demo.article', 'op' => 'i' ) );
$cursor->tailable( true );
$cursor->awaitData( true );

while (true) {
    if (!$cursor->hasNext()) {
        // мы прочитали все результаты, выходим
        if ($cursor->dead()) {
            break;
        }
    } else {
        var_dump( $cursor->getNext() );
    }
}
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   Документация MongoDB по <link xlink:href="&url.mongodb.dochub.tailable;">настраиваемым курсорам</link>.
  </para>
  <para>
   <simplelist>
    <member><function>MongoCursor::tailable</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
