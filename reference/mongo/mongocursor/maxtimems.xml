<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e9366ee458b2900c53a503b1ad97664e1d9a8859 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocursor.maxtimems" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCursor::maxTimeMS</refname>
  <refpurpose>Устанавливает время ожидания на стороне сервера для этого запроса</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCursor</type><methodname>MongoCursor::maxTimeMS</methodname>
   <methodparam><type>int</type><parameter>ms</parameter></methodparam>
  </methodsynopsis>
  <para>
   Задаёт совокупный лимит времени в миллисекундах, 
   который должен быть разрешён сервером для обработки операций над курсором.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term>
     <parameter>ms</parameter>
    </term>
    <listitem>
     <para>
      Задаёт совокупный лимит времени в миллисекундах, 
      который должен быть разрешён сервером для обработки операций над курсором.
     </para>
    </listitem>
   </varlistentry>   
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает курсор.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Выдаёт исключение <classname>MongoCursorException</classname>, 
   если этот курсор начал итерацию.
  </para>
  <para>
   Вызывает методы, которые выбирают результаты, 
   чтобы вызвать исключение <classname>MongoExecutionTimeoutException</classname>, 
   если запрос занимает больше времени, чем указанное количество миллисекунд во время обработки.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример использования <methodname>MongoCursor::maxTimeMS</methodname></title>
   <para>
    В следующем примере сервер прервёт запрос, 
    если для возврата курсору курсору потребуется более двух секунд.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$cursor = $collection->find();
$cursor->maxTimeMS(2000);

try {
    $results = iterator_to_array($cursor);
} catch (MongoExecutionTimeoutException $e) {
    echo "запрос занял слишком много времени!";
}

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    В отличие от <methodname>MongoCursor::timeout</methodname>, 
    который задаёт время ожидания на стороне клиента, 
    <methodname>MongoCursor::maxTimeMS</methodname> может использоваться для того, 
    чтобы сервер MongoDB прерывал длительные запросы. 
    Это время ожидания накапливается за время жизни курсора 
    (то есть каждый пакет будет вносить свой вклад в этот срок). 
    Во времи ожидания учитывается только время обработки; простой не считается.
   </para>
  </warning>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
