<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 565e478d69a9d0c217eda773c77ca823423adf21 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<chapter xml:id="mongo.updates" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Обновления</title>

 <para>
  Обновления могут быть одной из самых сложных операций, доступных с MongoDB. 
  Они объединяют запрос с действием, изменяя документы, которые соответствуют критериям. 
  Они также чрезвычайно производительные, что позволяет быстро менять документы и заменять их целиком. 
  Они сделаны на месте (когда это возможно) с небольшими накладными расходами.
 </para>

 <section>
  <title>Изменение или замена документов</title>

  <para>
   Вы можете использовать два типа обновлений: изменение обновлений и замена обновлений. 
   Изменяющие обновления содержат $-операторы и поля изменений в документе: 
   они могут увеличивать счётчики, помещать новые элементы в массив или изменять тип поля.
  </para>

  <para>
   Например, изменяющее обновление может добавить новое поле в документ.
   <programlisting role="php">
<![CDATA[
<?php
/** предположим, документы выглядят так:
 * {"username" : "...", "password" : "...", "email" : "..."}
 */
$coll->update(array("username" => "joe"), array('$set' => array("twitter" => "@joe4153")));

/** Теперь документ будет выглядеть так:
 * {"username" : "joe", "password" : "...", "email" : "...", "twitter" : "@joe4153"}
 */
?>
]]>
   </programlisting>
  </para>

  <para>
   Замена обновлений заменяет весь соответствующий документ новым документом. 
   Как правило, они не так эффективны, как использование $-модификаторов, 
   но могут быть очень полезны для сложных операций или обновлений, 
   которые нельзя выразить в терминах $-операторов.
  </para>

  <para>
   Например, заменяющее обновление может полностью изменить структуру документа.
   <programlisting role="php">
<![CDATA[
<?php
/** предположим, документы выглядят так:
 * {"username" : "...", "password" : "...", "email" : "..."}
 */
$coll->update(array("username" => "joe"), array("userId" => 12345, "info" => array(
    "name" => "joe", "twitter" => "@joe4153", "email" => "..."), "likes" => array()));

/** теперь документ будет выглядеть так:
 * {
 *     "userId" : 12345, 
 *     "info" : {
 *         "name" : "joe", 
 *         "twitter" : "@joe4153", 
 *         "email" : "..."
 *     },
 *     "likes" : []
 * }
 */
?>
]]>
   </programlisting>
  </para>

 </section>

 <section>
  <title>Обновление вложенных объектов</title>

  <para>
   Предположим, мы хотим изменить имя автора комментария в этом документе:

   <programlisting role="javascript">
<![CDATA[
{ 
    "_id" : ObjectId("4b06c282edb87a281e09dad9"), 
    "content" : "this is a blog post.",
    "comments" : 
    [
        {
            "author" : "Mike",
            "comment" : "I think that blah blah blah...",
        },
        {
            "author" : "John",
            "comment" : "I disagree."
        }
    ]
}
]]>
   </programlisting>

   Чтобы изменить внутреннее поле, мы используем $set 
   (чтобы все остальные поля не были удалены!) с индексом комментария для изменения:

   <programlisting role="php">
<![CDATA[
<?php

$blog->update($criteria, array('$set' => array("comments.1" => array("author" => "Jim"))));

?>
]]>
   </programlisting>
  </para>
 </section>

 <section>
  <title>Позиционный оператор</title>
  <para>
   Позиционный оператор <literal>$</literal> полезен для обновления объектов, 
   находящихся в массивах. Например, в приведённом выше примере предположим, 
   что мы не знали индекс комментария, который нам нужно было изменить, 
   просто нам нужно было изменить "John" на "Jim". Мы можем использовать для этого <literal>$</literal>.
  </para>
  <programlisting role="php">
<![CDATA[
<?php

$blog->update(
    array("comments.author" => "John"), 
    array('$set' => array('comments.$.author' => "Jim")));

?>
]]>
  </programlisting>
 </section>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

