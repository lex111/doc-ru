<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 74dfdc51ecc7f6fd8cd217d72731843e2a82ece4 Maintainer: lex Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->

<phpdoc:classref xml:id="class.mongogridfs" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>Класс MongoGridFS</title>
 <titleabbrev>MongoGridFS</titleabbrev>

 <partintro>

<!-- {{{ Mongogridfs intro -->
  <section xml:id="mongogridfs.intro">
   &reftitle.intro;
   <para>
    Утилиты для хранения и извлечения файлов из базы данных.
   </para>

   <para>
    GridFS - это спецификация хранилища, с которой работают все поддерживаемые драйверы. 
    По сути, она определяет две коллекции: <literal>files</literal> для метаданных файла 
    и <literal>chunks</literal> содержимого файла. 
    Если файл большой, он будет автоматически разбит на мелкие фрагменты, 
    и каждый фрагмент будет сохранён как документ в коллекции фрагментов.
   </para>

   <para>
    Каждый документ в коллекции файлов содержит имя файла, дату загрузки и хэш md5. 
    Он также содержит уникальное поле <literal>_id</literal>, которое можно использовать 
    для запроса к коллекции фрагментов содержимого файла. 
    Каждый документ в коллекции чанков содержит фрагмент двоичных данных, 
    поле <literal>files_id</literal>, совпадающее с <literal>_id</literal> его файла, 
    и положение этого фрагмента в общем файле.
   </para>

   <para>
    Например, документы файлов выглядят примерно так:
    <programlisting role="php">
<![CDATA[
<?php
array("_id" => 123456789, "filename" => "foo.txt", "chunkSize" => 3, "length" => 12);
?>
]]>
    </programlisting>
    а фрагменты документов выглядят так:
    <programlisting role="php">
<![CDATA[
<?php
array("files_id" => 123456789, "n" => 0, "data" => new MongoBinData("abc"));
array("files_id" => 123456789, "n" => 1, "data" => new MongoBinData("def"));
array("files_id" => 123456789, "n" => 2, "data" => new MongoBinData("ghi"));
array("files_id" => 123456789, "n" => 3, "data" => new MongoBinData("jkl"));
?>
]]>
    </programlisting>
    Конечно, размер фрагмента по умолчанию составляет тысячи байтов, но это громоздкий пример.
   </para>
  </section>

  <section>
   <title>Межязыковая совместимость</title>
   <para>
    Должна быть возможность использовать любые файлы, 
    созданные MongoGridFS с любыми другими драйверами, и наоборот. 
    Однако некоторые драйверы ожидают, что все метаданные, связанные с файлом, 
    будут в поле "metadata". 
    Если вы собираетесь использовать другие языки, 
    хорошей идеей будет поместить информацию, которую вы хотите, 
    чтобы они видели в поле "metadata". Например, вместо:
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$grid->storeFile("somefile.txt", array("date" => new MongoDate()));

?>
]]>
   </programlisting>
   <para>
    сделать так:
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$grid->storeFile("somefile.txt", array("metadata" => array("date" => new MongoDate())));

?>
]]>
   </programlisting>
  </section>

  <section>
   <title>Семейство <classname>MongoGridFS</classname></title>

   <para>
    <classname>MongoGridFS</classname> представляет коллекции файлов и фрагментов. 
    <classname>MongoGridFS</classname> расширяет <classname>MongoCollection</classname>, 
    и экземпляр <classname>MongoGridFS</classname> имеет доступ ко всем 
    методам <classname>MongoCollection</classname>, которые действуют на коллекцию файлов:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php

$grid = $db->getGridFS();
$grid->update(array("filename" => "foo"), $newObj); // обновление коллекции файлов

?>
]]>
     </programlisting>
    </informalexample>
   </para>

   <para>
    Ещё один пример манипулирования метаданными:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php

// сохраняем файл
$id = $grid->storeFile("game.tgz");
$game = $grid->findOne();

// добавляем счётчик загрузок
$game->file['downloads'] = 0;
$grid->save($game->file);

// увеличиваем значение счётчика
$grid->update(array("_id" => $id), array('$inc' => array("downloads" => 1)));

?>
]]>
     </programlisting>
    </informalexample>
   </para>

   <para>
    Вы также можете получить доступ к коллекции фрагментов из экземпляра
    <classname>MongoGridFS</classname>:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php

  $chunks = $grid->chunks; // $chunks – обычная коллекция MongoCollection
$chunks->insert(array("x" => 4));

?>
]]>
     </programlisting>
    </informalexample>
   </para>
   <para>
    Есть некоторые методы для <classname>MongoGridFS</classname> с тем же именем, 
    что и методы <classname>MongoCollection</classname>, которые ведут себя немного по-другому. 
    Например, <function>MongoGridFS::remove</function> удалит все объекты, 
    которые соответствуют критериям, из коллекции файлов, а их содержимое - из коллекции фрагментов.
   </para>

   <para>
    Чтобы сохранить что-то новое в GridFS, есть несколько вариантов. 
    Если у вас есть имя файла, вы можете выполнить:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php

$grid->storeFile($filename, array("whatever" => "metadata", "you" => "want"));

?>
]]>
     </programlisting>
    </informalexample>
   </para>

   <para>
    Если у вас есть строка байтов, которая не является файлом, 
    вы также можете сохранить её, используя <function>MongoGridFS::storeBytes</function>:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php

$grid->storeBytes($bytes, array("whatever" => "metadata", "you" => "want"));

?>
]]>
     </programlisting>
    </informalexample>
   </para>

   <para>
    Запрос к коллекции <classname>MongoGridFS</classname> возвращает 
    <classname>MongoGridFSCursor</classname>, который ведёт себя, 
    как обычный <classname>MongoCursor</classname>, за исключением того, 
    что он возвращает <classname>MongoGridFSFiles</classname> вместо ассоциативных массивов.
   </para>

   <para>
    <classname>MongoGridFSFiles</classname> могут быть записаны обратно на диск 
    с помощью <function>MongoGridFSFile::write</function> или извлечены в память 
    с помощью <function>MongoGridFSFile::getBytes</function>. 
    В настоящее время не существует метода для автоматической потоковой передачи фрагментов, 
    но его было бы довольно просто написать, обратившись к коллекции <literal>$grid->chunks</literal>.
   </para>

   <para>
    Объекты <classname>MongoGridFSFile</classname> содержат поля файла, 
    которые могут содержая любые метаданные.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="mongogridfs.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>MongoGridFS</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <modifier>extends</modifier>
      <classname>MongoCollection</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    
    <classsynopsisinfo role="comment">Поля</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>MongoCollection</type>
     <varname>chunks</varname>
     <initializer>&null;</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>protected</modifier>
     <type>string</type>
     <varname>filesName</varname>
     <initializer>&null;</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>protected</modifier>
     <type>string</type>
     <varname>chunksName</varname>
     <initializer>&null;</initializer>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.mongogridfs')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->

  </section>

  <section>
   &reftitle.seealso;
   <simplelist>
    <member>Документация MongoDB по <link xlink:href="&url.mongodb.docs.gridfs;">GridFS</link></member>
    <member>Статья в блоге LightCube Solutions про <link xlink:href="&url.mongodb.gridfs.fileupload;">сохранение пользовательских файлов</link></member>
    <member>Статья в блоге LightCube Solutions про <link xlink:href="&url.mongodb.gridfs.metadata;">добавление метаданных к файлам</link></member>
   </simplelist>
  </section>
 </partintro>

 &reference.mongo.entities.mongogridfs;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
