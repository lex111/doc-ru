<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e9366ee458b2900c53a503b1ad97664e1d9a8859 Maintainer: lex Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->

<phpdoc:classref xml:id="class.mongocommandcursor" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>Класс MongoCommandCursor</title>
 <titleabbrev>MongoCommandCursor</titleabbrev>

 <partintro>

  <!-- {{{ MongocommandCursor intro -->
  <section xml:id="mongocommandcursor.intro">
   &reftitle.intro;
   <para>
    Командный курсор похож на <classname>MongoCursor</classname> за исключением того, 
    что он используется для перебора результатов команды базы данных вместо обычного запроса. 
    Командные курсоры полезны для итерации больших наборов результатов, 
    которые могут превышать ограничение размера документа (на данный момент – 16 МБ) 
    одного ответа <function>MongoDB::command</function>.
   </para>
   <para>
    Вы можете создавать командные курсоры, 
    используя <function>MongoCommandCursor::__construct</function> 
    или метод фабрики <function>MongoCommandCursor::createFromDocument</function>, 
    как правило, используя специфичные для команды помощники, 
    такие как <function>MongoCollection::aggregateCursor</function>.
   </para>
   <para>
    Обратите внимание, что курсор не содержит результаты команды базы данных; 
    он просто управляет итерацией. 
    Таким образом, если вы печатаете курсор (например, с помощью 
    <function>var_dump</function> или <function>print_r</function>), 
    вы увидите объект курсора, но не документы результата.
   </para>
  </section>

  <section>
   <title>Стадии курсора</title>
   <para>
    <classname>MongoCommandCursor</classname> имеет две "жизненные стадии": до и после выполнения запроса. 
    Когда курсор создан, он ещё не связался с базой данных, поэтому он находится в состоянии перед выполнением запроса. 
    Когда клиент впервые пытается получить результат (вызывая <function>MongoCommandCursor::rewind</function>, прямо или косвенно), 
    курсор переходит в состояние после выполнения запроса.
   </para>
   <para>
    Размер пакета командного курсора и время ожидания сокета могут быть сконфигурированы как в состоянии до, так и после выполнения запроса.
   </para>
   <para>
    <example xml:id="mongocommandcursor.stages.adding-options">
     <title>Добавление параметров в <classname>MongoCommandCursor</classname></title>
     <programlisting role="php">
<![CDATA[
<?php

$cursor = new MongoCommandCursor(...);

$cursor = $cursor->batchSize( 4 );

foreach ($cursor as $result) {
    var_dump($result);
}
?>
]]>
     </programlisting>
    </example>
   </para>
  </section>
  <!-- }}} -->

  <section xml:id="mongocommandcursor.synopsis">
   &reftitle.classsynopsis;

   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>MongoCommandCursor</classname></ooclass>

    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>MongoCommandCursor</classname>
     </ooclass>
     <oointerface>
      <interfacename>MongoCursorInterface</interfacename>
     </oointerface>
     <oointerface>
      <interfacename>Iterator</interfacename>
     </oointerface>
    </classsynopsisinfo>
    <!-- }}} -->
    
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.mongocommandcursor')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
   <!-- }}} -->

  </section>

  <section role="seealso">
   &reftitle.seealso;
   <simplelist>
    <member><methodname>MongoDB::command</methodname></member>
    <member><methodname>MongoCollection::aggregateCursor</methodname></member>
   </simplelist>
  </section>

 </partintro>

 &reference.mongo.entities.mongocommandcursor;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
