<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 763f5d045c1393aa2b7f471b822b02b56dbedef8 Maintainer: lex Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->

<refentry xml:id="weakref.acquire" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Weakref::acquire</refname>
  <refpurpose>Создаёт сильную ссылку на текущий объект</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>Weakref::acquire</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Создаёт из слабой ссылки сильную ссылку на текущий объект, которую будет учитывать сборщик мусора.
  </para>
  <para>
   Объект <classname>Weakref</classname> поддерживает внутренний счётчик для отслеживания внешних ссылок. Если вызов
   <methodname>Weakref::acquire</methodname> успешен, то счётчик увеличится на один.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает &true;, если ссылка валидна и можеть быть преобразована в сильную, &false; в противном случае.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример выполнения <methodname>Weakref::acquire</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php
class MyClass {
    public function __destruct() {
        echo "Уничтожение объекта!\n";
    }
}

$o1 = new MyClass;

$r1 = new Weakref($o1);

$r1->acquire();

echo "Удаление o1...\n";
unset($o1);

$o2 = $r1->get();

$r1->release();

echo "Удаление o2...\n";
unset($o2);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Удаление o1...
Удаление o2...
Уничтожение объекта!
]]>
    </screen>
   </example>
  </para>
  
  <para>
   <example>
    <title>Пример вложенных вызовов acquire/release</title>
    <programlisting role="php">
<![CDATA[
<?php
class MyClass {
    public function __destruct() {
        echo "Уничтожение объекта!\n";
    }
}

$o1 = new MyClass;

$r1 = new Weakref($o1);

echo "Создание сильной ссылки...\n";
$r1->acquire();

echo "  Удаление...\n";
unset($o1);

echo "  Создание сильной ссылки...\n";
$r1->acquire();

echo "    Создание сильной ссылки...\n";
$r1->acquire();

echo "    Создание сильной ссылки...\n";
$r1->release();

echo "  Удаление сильной ссылки...\n";
$r1->release();

echo "Удаление сильной ссылки...\n";
$r1->release();

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Создание сильной ссылки...
  Удаление...
  Создание сильной ссылки...
    Создание сильной ссылки...
    Удаление сильной ссылки...
  Удаление сильной ссылки...
Удаление сильной ссылки...
Уничтожение объекта!
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>Weakref::release</methodname></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
