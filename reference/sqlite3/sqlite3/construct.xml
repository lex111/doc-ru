<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e7bc89917993bb8f970fbe6eb69e3b4056b0bf15 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: yes Maintainer: sergey -->
<!-- $Revision$ -->
<refentry xml:id="sqlite3.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SQLite3::__construct</refname>
  <refpurpose>
   Создаёт экземпляр объекта SQLite3 и открывает соеденение с базой
  </refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <methodname>SQLite3::__construct</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>encryption_key</parameter><initializer>""</initializer></methodparam>
  </methodsynopsis>
  <para>
   Создаёт экземпляр объекта SQLite3 и открывает соедненение с базой.
   Если включено шифрование, то появляется возможность использования ключа.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Путь к SQLite базе или <literal>:memory:</literal>, для использования базы в оперативной памяти.
       Если <parameter>filename</parameter> задать как пустую строку, то будет
       создана приватная, временная база данных на диске. Эта база данных будет
       удалена сразу после закрытия соединения с ней.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Необязательные флаги, для определения типа открытия базы данных.
       По умолчанию, используется <literal>SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE</literal>.
       <itemizedlist>
        <listitem>
         <para>
          <literal>SQLITE3_OPEN_READONLY</literal>: Открыть только для чтения.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>SQLITE3_OPEN_READWRITE</literal>: Открыть для чтения и записи.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>SQLITE3_OPEN_CREATE</literal>: Создать новый файл базы данных, если он отсутсвует
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>encryption_key</parameter></term>
     <listitem>
      <para>
       Необязательный ключ для шифрования/расшифровки базы данных. Если модуль 
       шифравания не установлен, то данный параметр будет проигнорирован.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает объект SQLite3, в случае успешного выполнения.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Выбрасывает исключение <classname>Exception</classname> в случае возникновения ошибки.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>7.0.10</entry>
      <entry>
       Параметр <parameter>filename</parameter> можно задавать пустой строкой для
       создания на диске приватной, временной базы данных.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>SQLite3::__construct</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$db = new SQLite3('mysqlitedb.db');

$db->exec('CREATE TABLE foo (bar TEXT)');
$db->exec("INSERT INTO foo (bar) VALUES ('This is a test')");

$result = $db->query('SELECT bar FROM foo');
var_dump($result->fetchArray());
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
